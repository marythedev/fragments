# Continuous Integration (CI) Workflow
name: ci

# See:
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#on
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Check out code
        uses: actions/checkout@v3

      # https://github.com/actions/setup-node
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          # Use node LTS version 18 - https://github.com/actions/setup-node#supported-version-syntax
          node-version: '18'
          # Cache npm dependencies so they don't have to be downloaded next time - https://github.com/actions/setup-node#caching-packages-dependencies
          cache: 'npm'

      - name: Install node dependencies
        #See: https://docs.npmjs.com/cli/v8/commands/npm-ci
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install node dependencies and run Tests
        # There are two ways to do this:
        # 1. run: |
        #    - npm install
        #    - npm test
        #2. Use `install-ci-test` to do it in a single command, see https://docs.npmjs.com/cli/v8/commands/npm-install-ci-test
        run: npm install-ci-test

  docker:
      name: Push Docker Image
      runs-on: ubuntu-latest
      needs: [lint, unit-tests]
      steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Build Docker Image
          run: docker build -t mdmytrenko/fragments:latest .
          
        - name: Authenticate
          run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          
        - name: Push Docker Image
          run: docker push mdmytrenko/fragments